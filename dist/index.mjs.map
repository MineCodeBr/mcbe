{"version":3,"sources":["../src/Addon.ts","../src/utils.ts","../src/Block.ts","../src/Item.ts","../src/Recipe.ts","../index.ts"],"sourcesContent":["import * as fs from 'node:fs'\nimport { uuid, formatVersion, stringify, js_stringify, log, log_warn } from \"./utils\";\n\nimport clc from 'cli-color'\n\n\nimport { Block, Item, Options, Recipe } from \"../types\"\nexport default class {\n  name: string;\n  description: string;\n  files: string;\n  build: boolean;\n  overwrite: boolean;\n  dirBe: string;\n  dirRe: string;\n\n  constructor(name: string, description: string, options?: Options) {\n    log(\"Start\")\n    this.name = name;\n    this.description = description || \"No author!!\";\n    this.files = \"\";\n    this.build = options?.build ? options?.build : false\n    this.overwrite = options?.overwrite ? options.overwrite : false\n    this.dirBe = \"\";\n    this.dirRe = \"\"\n  }\n  toManifestCreated(dirBe: string, dirRe?: string) {\n    this.dirBe = dirBe;\n    this.dirRe = dirRe || dirBe;\n    if (this.overwrite) {\n      fs.rmSync(this.dirRe + \" RE\", { recursive: true, force: true });\n      fs.rmSync(this.dirBe + \" BE\", { recursive: true, force: true });\n    }\n    const manifests = {\n      be: {\n        format_version: 2,\n        header: {\n          description: this.description,\n          name: this.name + \" BE\",\n          uuid: uuid(),\n          version: [0, 0, 1],\n          min_engine_version: [...formatVersion.split(\".\")],\n        },\n        modules: [\n          {\n            description: this.description,\n            type: \"script\",\n            uuid: uuid(),\n            version: [1, 0, 0],\n            entry: \"scripts/index.js\",\n          },\n        ],\n        capabilities: [\"script_eval\"],\n        dependencies: [\n          {\n            module_name: \"@minecraft/server\",\n            version: \"1.15.0\",\n          },\n          {\n            module_name: \"@minecraft/server-ui\",\n            version: \"1.1.0\",\n          },\n        ],\n      },\n      re: {\n        format_version: 2,\n        header: {\n          description: this.description,\n          name: this.name + \" RE\",\n          uuid: uuid(),\n          version: [1, 0, 0],\n          min_engine_version: [...formatVersion.split(\".\")],\n        },\n        modules: [\n          {\n            description: this.description,\n            type: \"resources\",\n            uuid: uuid(),\n            version: [1, 0, 0],\n          },\n        ],\n      },\n    };\n    if (!fs.existsSync(this.dirRe + \" RE\") || !fs.existsSync(dirBe + \" BE\")) {\n      if (!fs.existsSync(dirBe + \" BE\")) fs.mkdirSync(dirBe + \" BE\", { recursive: true });\n      fs.writeFileSync(\n        `${dirBe + \" BE\"}/manifest.json`,\n        stringify(manifests[\"be\"], this.build),\n      );\n      if (!fs.existsSync(this.dirRe + \" RE\")) fs.mkdirSync(this.dirRe + \" RE\", { recursive: true });\n      fs.writeFileSync(\n        `${this.dirRe + \" RE\"}/manifest.json`,\n        stringify(manifests[\"re\"], this.build),\n      );\n    }\n    if (this.build) {\n      fs.mkdirSync(`${dirBe} BE/scripts`)\n      fs.writeFileSync(`${dirBe} BE/scripts/index.js`, 'import * as mc from \"@minecraft/server\";')\n    }\n\n    return this;\n  }\n  addBlock(...arg: Block[]) {\n    for (const data of arg) {\n      log_warn(\"BLOCK\", `Created block ${clc.bgBlack(data.filename + \".json\")}`)\n      Object.keys(data.run).map(key => ((data?.run as any)[key as string]) ? (data?.run as any)[key as string](this) : null)\n\n      if (!fs.existsSync(`${this.dirBe} BE/blocks`)) fs.mkdirSync(`${this.dirBe} BE/blocks`, { recursive: true });\n      this.files += `import \"./blocks/${data.filename}\";\\n`;\n      fs.writeFileSync(\n        `${this.dirBe + \" BE\"}/blocks/${data.filename}.json`,\n        stringify(data.source, this.build),\n      );\n    }\n    if (this.build) return this\n    if (this.files) fs.writeFileSync(`${this.dirBe + \" BE\"}/scripts/index.js`, js_stringify(this.files, this.build));\n    return this;\n  }\n  addItem(...arg: Item[]) {\n    for (const data of arg) {\n      log_warn(\"ITEM\", `Created item ${clc.bgBlack(data.filename + \".json\")}`)\n      for (const key of Object.keys(data.run)) {\n        if ((data?.run as any)[key as string]) (data?.run as any)[key as string](this);\n      }\n      this.files += `import \"./blocks/${data.filename}\";\\n`;\n      if (!fs.existsSync(`${this.dirBe} BE/items`))\n        fs.mkdirSync(`${this.dirBe} BE/items`, { recursive: true });\n      fs.writeFileSync(\n        `${this.dirBe + \" BE\"}/items/${data.filename}.json`,\n        stringify(data.source, this.build),\n      );\n    }\n    if (this.build) return this\n    if (this.files) fs.writeFileSync(`${this.dirBe + \" BE\"}/scripts/index.js`, js_stringify(this.files, this.build));\n    return this;\n  }\n  addRecipe(...arg: Recipe[]) {\n    for (const data of arg) {\n      log_warn(\"RECIPE\", `Created recipe ${clc.bgBlack(data.filename + \".json\")}`)\n      const recipe = data.source\n      if (!fs.existsSync(`${this.dirBe} BE/recipes`))\n        fs.mkdirSync(`${this.dirBe} BE/recipes`, { recursive: true });\n      if (recipe.type === \"minecraft:crafting_shaped\") {\n        fs.writeFileSync(\n          `${this.dirBe + \" BE\"}/recipes/${recipe.identifier.split(\":\").pop()}.json`,\n          stringify(data.source, this.build),\n        );\n      }\n    }\n    return this;\n  }\n}","import js_beautify from \"js-beautify\"\nimport clc from 'cli-color'\n\nexport const log_warn = (name: string, description: string) => console.log(clc.bgBlack.green(` MCBE`) + clc.bgBlack.blue(` ${name} `) + \" \" + description)\nexport const log = (value: string) => console.log(clc.bgBlack.green(\" MCBE \") + \" \" + value)\nexport const log_error = (value: string) => {\n  console.log(clc.bgBlack.green(\" MCBE \") + clc.bgBlack.red(\"ERROR \") + \" \" + value)\n  process.exit()\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport const formatVersion = \"1.21.40\"\n\nexport function stringify(object: object, build?: boolean) {\n  return build ? JSON.stringify(object) : JSON.stringify(object, null, 2)\n}\n\nexport function js_stringify(object: string, build?: boolean) {\n  return build ? js_beautify(String(object), { indent_size: 0, space_in_empty_paren: false }).replaceAll(\"\\n\", \"\") : js_beautify(String(object), { indent_size: 2, space_in_empty_paren: true })\n}\n","import fs, { ReadStream } from \"node:fs\"\nimport { formatVersion, js_stringify, log, log_error, stringify } from \"./utils\"\nimport { Addon, BlockCustomComponentsType } from \"../types\"\nimport { BlockCustomComponent, BlockEvent } from \"@minecraft/server\"\n\nexport default class {\n  id: string;\n  filename: string;\n  source: any;\n  script: string;\n  allScript: string;\n  run: {\n    lootCopy?: (v: Addon) => void,\n    executeTerrainTexture?: (v: Addon) => void,\n    executeGemotry?: (v: Addon) => void,\n    set_custom_component?: (v: Addon) => void\n  };\n\n  constructor(id: string) {\n    this.id = id || \"mc:block\";\n    this.filename = id.split(\":\")[1];\n    this.allScript = \"\";\n    this.script = `import * as mc from \"@minecraft/server\";\n    mc.world.beforeEvents.worldInitialize.subscribe(data => {\n      //body\n    })`\n    this.source = {\n      format_version: formatVersion,\n      \"minecraft:block\": {\n        description: {\n          identifier: this.id,\n          menu_category: {\n            category: \"items\",\n          },\n        },\n        components: {\n          \"minecraft:custom_components\": [],\n        },\n      },\n    };\n    this.run = {};\n  }\n  setStates(states: object) {\n    this.source[\"minecraft:block\"][\"description\"][\"states\"] = states;\n    return this;\n  }\n  setPermutations(permutations: object[]) {\n    this.source[\"minecraft:block\"][\"permutations\"] = permutations;\n    return this;\n  }\n  setComponent(name: string, value: { dest: string, loot: object } | any) {\n    if (name === \"minecraft:loot\" && value[\"dest\"]) {\n      const arg = value[\"dest\"].split(\"/\");\n      this.run[\"lootCopy\"] = (v: any) => {\n        if (\n          !fs.existsSync(\n            `${v.dirBe} BE/${value[\"dest\"].replaceAll(arg[arg.length - 1], \"\")}`,\n          )\n        )\n          fs.mkdirSync(\n            `${v.dirBe} BE/${value[\"dest\"].replaceAll(arg[arg.length - 1], \"\")}`,\n            { recursive: true },\n          );\n\n        fs.writeFileSync(\n          `${v.dirBe + \" BE\"}/${value[\"dest\"]}`,\n          stringify(value.loot, v.build),\n        );\n      };\n      this.source[\"minecraft:block\"][\"components\"][name] = value[\"dest\"];\n    } else this.source[\"minecraft:block\"][\"components\"][name] = value;\n    return this;\n  }\n  setMaterialTexture(data: string | object | any) {\n    if (typeof data === \"string\")\n      this.source[\"minecraft:block\"][\"components\"][\"minecraft:material_instances\"] = {\n        \"*\": { texture: data, },\n      };\n    else if (typeof data === \"object\") {\n      const result: any = {};\n      for (const key of Object.keys(data)) {\n        result[key] = {\n          texture: data[key],\n        };\n      }\n      this.source[\"minecraft:block\"][\"components\"][\n        \"minecraft:material_instances\"\n      ] = result;\n    }\n    return this;\n  }\n  setTerrainTexture(name: string, value: string, src: string) {\n    this.run[\"executeTerrainTexture\"] = (v) => {\n      if (!fs.existsSync(`${v.dirRe} RE/textures/blocks`))\n        fs.mkdirSync(`${v.dirRe} RE/textures/blocks`, { recursive: true });\n      let data: any = {\n        num_mip_levels: 4,\n        padding: 8,\n        resource_pack_name: \"vanilla\",\n        texture_data: {}\n      };\n\n      if (fs.existsSync(`${v.dirRe} RE/textures/terrain_texture.json`))\n        data = JSON.parse(\n          String(fs.readFileSync(`${v.dirRe} RE/textures/terrain_texture.json`))\n        );\n\n      fs.copyFileSync(src, `${v.dirRe} RE/${value}.png`);\n\n      data[\"texture_data\"][name] = { textures: value };\n\n      fs.writeFileSync(\n        `${v.dirRe} RE/textures/terrain_texture.json`,\n        stringify(data, v.build),\n      );\n    };\n\n    return this;\n  }\n  setGeometry(file: string, boneVisibility: object) {\n    if (!fs.existsSync(file)) log_error(\"Geometria file nao existe\")\n    const readGeo = JSON.parse(String(fs.readFileSync(file)));\n    if (boneVisibility) {\n      this.source[\"minecraft:block\"][\"components\"][\"minecraft:geometry\"] = {\n        identifier:\n          readGeo[\"minecraft:geometry\"][0][\"description\"][\"identifier\"],\n        bone_visibility: {\n          ...boneVisibility,\n        },\n      };\n    } else {\n      this.source[\"minecraft:block\"][\"components\"][\"minecraft:geometry\"] =\n        readGeo[\"minecraft:geometry\"][0][\"description\"][\"identifier\"];\n    }\n\n    this.run[\"executeGemotry\"] = (v) => {\n      if (!fs.existsSync(`${v.dirRe} RE/models/blocks`))\n        fs.mkdirSync(`${v.dirRe} RE/models/blocks`, { recursive: true });\n      // console.log(file.replaceAll(\"./\", \"\"))\n      fs.writeFileSync(`${v.dirRe} RE/models/blocks/${file.split('/').pop()}`, stringify(JSON.parse(String(fs.readFileSync(`${file}`))), v.build));\n    };\n    return this;\n  }\n  setCustomComponent(customName: string, customComponent: BlockCustomComponent, options?: {\n    interval_range?: number[],\n    readonly looping?: boolean | false\n  } | { min_fall_distance?: number }) {\n    this.source[\"minecraft:block\"][\"components\"][\"minecraft:custom_components\"].push(customName);\n\n    this.allScript += `data.blockComponentRegistry.registerCustomComponent(\"nameCustomComp\", {${Object.values(customComponent).map(v => js_stringify(String(v)))}});`\n      .replaceAll(/nameCustomComp/ig, String(customName))\n\n    Object.keys(customComponent).map(v => {\n      if (v == \"onTick\") this.source[\"minecraft:block\"][\"components\"][\"minecraft:tick\"] = options\n      if (v == \"onEntityFallOn\") this.source[\"minecraft:block\"][\"components\"][\"minecraft:entity_fall_on\"] = options\n    })\n    this.run[\"set_custom_component\"] = (v) => {\n      const data = this.script.replace(\"//body\", this.allScript)\n\n      if (v.build) {\n        fs.appendFileSync(`${v.dirBe} BE/scripts/index.js`, js_stringify(data.replaceAll(`import * as mc from \"@minecraft/server\";`, \"\"), v.build));\n        return this;\n      }\n      if (!fs.existsSync(`${v.dirBe} BE/scripts/blocks`)) fs.mkdirSync(`${v.dirBe} BE/scripts/blocks`, { recursive: true });\n      fs.writeFileSync(`${v.dirBe} BE/scripts/blocks/${this.filename}.js`, js_stringify(data, v.build));\n    };\n    return this;\n  }\n};\n","import fs from \"node:fs\"\nimport { ItemCustomComponent } from \"@minecraft/server\";\nimport { Addon } from \"../types\";\nimport { js_stringify, formatVersion, stringify, log_error } from \"./utils\";\nimport clc from \"cli-color\";\n\n\nexport default class {\n    id: string;\n    filename: string;\n    source: any;\n    baseCustomItem: string;\n    allComp: string;\n    run: {\n        set_item_texture?: (v: Addon) => void,\n        set_custom_component?: (v: Addon) => void\n    }\n\n    constructor(id: string) {\n        this.id = id || \"mc:item\";\n        this.filename = id.split(\":\")[1];\n        this.allComp = \"\"\n        this.baseCustomItem = `import * as mc from \"@minecraft/server\";\n        mc.world.beforeEvents.worldInitialize.subscribe(data => {\n          //body\n        });`\n        this.source = {\n            format_version: formatVersion,\n            \"minecraft:item\": {\n                description: {\n                    identifier: this.id,\n                    menu_category: {\n                        category: \"items\",\n                    },\n                },\n                components: {\n                    \"minecraft:custom_components\": [],\n                },\n            },\n        };\n        this.run = {};\n    }\n    setComponent(name: string, value: string | boolean | object) {\n        this.source[\"minecraft:item\"][\"components\"][name] = value;\n        return this;\n    }\n    setTags(...tags: string[]) {\n        if (typeof tags == \"string\") this.source[\"minecraft:item\"][\"components\"][\"minecraft:tag\"] = { \"tags\": [tags] }\n        else this.source[\"minecraft:item\"][\"components\"][\"minecraft:tag\"] = { \"tags\": [...tags] }\n        return this;\n    }\n    setItemTexture(name: string, value: string, src: string) {\n        this.run[\"set_item_texture\"] = (v) => {\n            if (!fs.existsSync(`${v.dirRe} RE/textures/items`))\n                fs.mkdirSync(`${v.dirRe} RE/textures/items`, { recursive: true });\n            let data = {\n                \"resource_pack_name\": \"wiki\",\n                \"texture_name\": \"atlas.items\",\n                texture_data: {} as any,\n            };\n\n            if (fs.existsSync(`${v.dirRe} RE/textures/item_texture.json`))\n                data = JSON.parse(\n                    String(fs.readFileSync(`${v.dirRe} RE/textures/item_texture.json`))\n                );\n\n\n            fs.copyFile(src, `${v.dirRe} RE/${value}.png`, (err) => {\n                if (err) log_error(`Textura definida nao existe ${clc.greenBright(src)}`)\n            });\n\n            data[\"texture_data\"][name] = { textures: value };\n\n            fs.writeFileSync(\n                `${v.dirRe} RE/textures/item_texture.json`,\n                stringify(data, v.build),\n            );\n        }\n        return this;\n    }\n    setCustomComponent(customName: string, customComponent: ItemCustomComponent) {\n        this.source[\"minecraft:item\"][\"components\"][\"minecraft:custom_components\"].push(customName);\n        const addComp = `data.itemComponentRegistry.registerCustomComponent(\"nameCustomComp\", {${Object.values(customComponent).map(v => js_stringify(String(v)))}})`\n            .replaceAll(/nameCustomComp/ig, String(customName))\n        this.allComp += addComp\n        this.run[\"set_custom_component\"] = (v) => {\n            const data = this.baseCustomItem.replace(\"//body\", this.allComp)\n            if (v.build) {\n                fs.appendFileSync(`${v.dirBe} BE/scripts/index.js`, js_stringify(data.replaceAll(`import * as mc from \"@minecraft/server\";`, \"\"), v.build));\n                return this;\n            }\n            if (!fs.existsSync(`${v.dirBe} BE/scripts/items`))\n                fs.mkdirSync(`${v.dirBe} BE/scripts/items`, { recursive: true });\n            fs.writeFileSync(`${v.dirBe} BE/scripts/items/${this.filename}.js`, js_stringify(data, v.build));\n        };\n        return this;\n    }\n};","export default class {\n    id: string;\n    type: string;\n    source: any;\n    filename: string;\n\n    constructor(id: string) {\n        this.type = \"\"\n        this.filename = id.split(\":\")[1]\n        this.id = id\n        this.source = {\n            \"minecraft:recipe_shaped\": {\n                \"tags\": [],\n                \"pattern\": []\n            }\n        }\n    }\n    setType(type: string) {\n        this.type = type\n        return this\n    }\n    setTables(tables: string[]) {\n        this.source[\"minecraft:recipe_shaped\"].tags = tables\n        return this\n    }\n    setPattern(pattern: string[]) {\n        this.source[\"minecraft:recipe_shaped\"].pattern = pattern\n        return this\n    }\n    setKey(key: object) {\n        this.source[\"minecraft:recipe_shaped\"].key = key\n        return this\n    }\n    setResult(result: { item: \"minecraft:air\" | string, count: 0 | number }) {\n        this.source[\"minecraft:recipe_shaped\"].result = result\n\n        return this\n    }\n    toJSON() {\n        return this.source\n    }\n\n\n};\n","import Addon from \"./src/Addon\"\nimport Block from \"./src/Block\"\nimport Item from \"./src/Item\"\nimport Recipe from \"./src/Recipe\"\n\nexport { Addon, Block, Item, Recipe }\n\nexport default { Addon, Block, Item, Recipe }"],"mappings":"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","names":["clc","fs","fs","fs","clc","fs"]}